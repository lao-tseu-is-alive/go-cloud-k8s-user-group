// Package users provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package users

import (
	"time"

	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	JWTAuthScopes = "JWTAuth.Scopes"
)

// Error defines model for Error.
type Error struct {
	Code    int32  `json:"code"`
	Message string `json:"message"`
}

// Group defines model for Group.
type Group struct {
	Comment              *string    `json:"comment,omitempty"`
	CreateTime           time.Time  `json:"create_time"`
	Creator              int32      `json:"creator"`
	Id                   int32      `json:"id"`
	InactivationReason   *string    `json:"inactivation_reason,omitempty"`
	InactivationTime     *time.Time `json:"inactivation_time,omitempty"`
	IsActive             bool       `json:"is_active"`
	LastModificationTime *time.Time `json:"last_modification_time,omitempty"`
	LastModificationUser *int32     `json:"last_modification_user,omitempty"`
	Name                 string     `json:"name"`
}

// GroupList defines model for GroupList.
type GroupList struct {
	Id       int32  `json:"id"`
	IsActive bool   `json:"is_active"`
	Name     string `json:"name"`
}

// User defines model for User.
type User struct {
	BadPasswordCount     int32               `json:"bad_password_count"`
	Comment              *string             `json:"comment,omitempty"`
	CreateTime           time.Time           `json:"create_time"`
	Creator              int32               `json:"creator"`
	Email                openapi_types.Email `json:"email"`
	ExternalId           *int32              `json:"external_id,omitempty"`
	GroupsId             *[]int              `json:"groups_id,omitempty"`
	Id                   int32               `json:"id"`
	InactivationReason   *string             `json:"inactivation_reason,omitempty"`
	InactivationTime     *time.Time          `json:"inactivation_time,omitempty"`
	IsActive             bool                `json:"is_active"`
	IsAdmin              bool                `json:"is_admin"`
	IsLocked             bool                `json:"is_locked"`
	LastModificationTime *time.Time          `json:"last_modification_time,omitempty"`
	LastModificationUser *int32              `json:"last_modification_user,omitempty"`
	Name                 string              `json:"name"`
	OrgunitId            *int32              `json:"orgunit_id,omitempty"`
	PasswordHash         string              `json:"password_hash"`
	Phone                *string             `json:"phone,omitempty"`
	Username             string              `json:"username"`
}

// UserList defines model for UserList.
type UserList struct {
	CreateTime time.Time           `json:"create_time"`
	Creator    int32               `json:"creator"`
	Email      openapi_types.Email `json:"email"`
	Id         int32               `json:"id"`
	IsActive   bool                `json:"is_active"`
	IsAdmin    bool                `json:"is_admin"`
	IsLocked   bool                `json:"is_locked"`
	Name       string              `json:"name"`
	Username   string              `json:"username"`
}

// UserLogin defines model for UserLogin.
type UserLogin struct {
	PasswordHash string `json:"password_hash"`
	Username     string `json:"username"`
}

// GroupListParams defines parameters for GroupList.
type GroupListParams struct {
	// Limit maximum number of results to return
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`
}

// UserListParams defines parameters for UserList.
type UserListParams struct {
	// Limit maximum number of results to return
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`
}

// GroupCreateJSONRequestBody defines body for GroupCreate for application/json ContentType.
type GroupCreateJSONRequestBody = Group

// GroupUpdateFormdataRequestBody defines body for GroupUpdate for application/x-www-form-urlencoded ContentType.
type GroupUpdateFormdataRequestBody = Group

// UserCreateJSONRequestBody defines body for UserCreate for application/json ContentType.
type UserCreateJSONRequestBody = User

// UserUpdateFormdataRequestBody defines body for UserUpdate for application/x-www-form-urlencoded ContentType.
type UserUpdateFormdataRequestBody = User

// UserChangePasswordFormdataRequestBody defines body for UserChangePassword for application/x-www-form-urlencoded ContentType.
type UserChangePasswordFormdataRequestBody = UserLogin

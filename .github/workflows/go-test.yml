# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go-Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    # Service containers to run with `builder` job
    services:
      # Label used to access the service container
      # https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers
      postgres:
        # Docker Hub image
        image: postgis/postgis:14-3.3
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Add unaccent extension to Postgres DB
      env:
        PGPASSWORD: ${{ secrets.DB_PASSWORD }}
      run: psql -h localhost -p 5432 -d postgres -U postgres -c 'CREATE EXTENSION unaccent;'

    - name: Build
      run: go build -v ./...

    - name: Test
      env:
        DB_DRIVER: postgres
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
        DB_SSL_MODE: prefer
        DB_NAME: postgres
        DB_USER: postgres
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        PORT: 9999
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        JWT_ISSUER_ID: ${{ secrets.JWT_ISSUER_ID }}
        JWT_DURATION_MINUTES: 240
        ADMIN_USER: ${{ secrets.ADMIN_USER }}
        ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
        ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
        ADMIN_ID: ${{ secrets.ADMIN_ID }}
      run: go test -race -coverprofile coverage.out -v ./...

---
apiVersion: v1
kind: Service                    # Type of kubernetes resource
metadata:
  name: go-cloud-k8s-user-group-service   # Name of the resource
  namespace: go-testing
  labels:     # The labels that will be applied
    app: go-cloud-k8s-user-group
  annotations:
    externalTrafficPolicy: "local"
spec:
  #type: NodePort                 # A port is opened on each node in your cluster via Kube proxy.
  # https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
  type: LoadBalancer             # Adds a load balancer (from the cloud provider)
  # k3s will deploy a daemon set listening on the given port on the host node
  # By default k3s have a builtin load balancer called "klipper" https://github.com/k3s-io/klipper-lb ok for one dev node.
  # It is possible to run multiple Services on the same node, as long as they use different ports.
  # in case you are using a 'real' k3s cluster with multiple nodes consider using metalLB instead
  externalTrafficPolicy: Local
  loadBalancerSourceRanges:
    - 192.168.0.0/16
  ports:                         # Take incoming HTTP requests on this port (exposed) and forward them to the targetPort of container
    - name: http
      port: 8000
      targetPort: my-http-port            # Should match the PORT env variable in deployment and containerPort that the Go application listens on
  selector:
    app: go-cloud-k8s-user-group         # Map any pod with this label `app=go-cloud-k8s-user-group` to this service
---